% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sp_list_item.R
\name{create_sp_list_items}
\alias{create_sp_list_items}
\alias{import_sp_list_items}
\alias{update_sp_list_items}
\alias{update_sp_list_item}
\title{Create or update list items}
\usage{
create_sp_list_items(
  data,
  list_name = NULL,
  list_id = NULL,
  sp_list = NULL,
  ...,
  allow_display_nm = TRUE,
  .id = "id",
  site_url = NULL,
  site = NULL,
  drive_name = NULL,
  drive_id = NULL,
  drive = NULL,
  check_fields = TRUE,
  sync_fields = FALSE,
  strict = FALSE,
  call = caller_env()
)

update_sp_list_items(
  data,
  list_name = NULL,
  list_id = NULL,
  sp_list = NULL,
  ...,
  .id = "id",
  allow_display_nm = TRUE,
  call = caller_env()
)

update_sp_list_item(
  ...,
  .data = NULL,
  id = NULL,
  sp_list_item = NULL,
  na_fields = c("drop", "replace"),
  list_name = NULL,
  list_id = NULL,
  sp_list = NULL,
  site_url = NULL,
  site = NULL,
  drive_name = NULL,
  drive_id = NULL,
  drive = NULL,
  call = caller_env()
)
}
\arguments{
\item{data}{Required. A data frame to import as items to the supplied or
identified SharePoint list.}

\item{list_name, list_id}{SharePoint List name or ID string.}

\item{sp_list}{A \code{ms_list} object. If supplied, \code{list_name}, \code{list_id},
\code{site_url}, \code{site}, \code{drive_name}, \code{drive_id}, \code{drive}, and any additional
parameters passed to \code{...} are all ignored.}

\item{...}{Additional parameters passed to \code{\link[=get_sp_site]{get_sp_site()}} or
\code{\link[Microsoft365R:client]{Microsoft365R::get_sharepoint_site()}}.}

\item{allow_display_nm}{If \code{TRUE}, allow data to use list field display names
instead of standard names. Note this requires a separate API call so may
result in a slower request.}

\item{.id}{Name of column in data to use for item ID values. Defaults to
"id".}

\item{site_url}{A SharePoint site URL in the format "https://[tenant
name].sharepoint.com/sites/[site name]". Any SharePoint item or document
URL can also be parsed to build a site URL using the tenant and site name
included in the URL.}

\item{site}{A \code{ms_site} object. If \code{site} is supplied, \code{site_url},
\code{site_name}, and \code{site_id} are ignored.}

\item{drive_name, drive_id}{SharePoint Drive name or ID passed to \code{get_drive}
method for SharePoint site object.}

\item{drive}{A \code{ms_drive} object. If \code{drive} is supplied, \code{drive_name} and
\code{drive_id} are ignored.}

\item{check_fields}{If \code{TRUE} (default), column names for the input data are
matched to the fields of the list object. If \code{FALSE}, the function will
error if any column names can't be matched to a field in the supplied
SharePoint list.}

\item{sync_fields}{If \code{TRUE}, use the \code{sync_fields} method to sync the fields
of the local \code{ms_list} object with the fields of the SharePoint List source
before retrieving list metadata.}

\item{strict}{Not yet implemented as of 2024-08-12. If \code{TRUE}, all column
names in data must be matched to field names in the supplied SharePoint
list. If \code{FALSE} (default), unmatched columns will be dropped with a
warning.}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}

\item{.data}{A list or data frame with fields to update.}

\item{sp_list_item}{Optional. A SharePoint list item object to use.}

\item{na_fields}{How to handle \code{NA} fields in input data. One of "drop"
(remove NA fields before updating list items, leaving existing values in
place) or "replace" (overwrite existing list values with new replacement NA
values).}
}
\description{
Create or update list items
}
\details{
Validation of data with with \code{create_sp_list_items()}

The handling of item creation when column names in \code{data} do not match the
fields names in the supplied list includes a few options:
\itemize{
\item If no names in data match fields in the list, the function errors and lists the field names.
\item If all names in data match fields in the list the records are created. Any fields that do not have corresponding names in data remain blank.
\item If any names in data do not match fields in the list, by default, those columns are dropped before adding items to the list.
\item If \code{strict = TRUE} and any names in data to not match fields, the function errors.
}
}
\examples{
sp_list_url <- "<SharePoint List URL with a Name field>"

if (is_sp_url(sp_list_url)) {
  create_sp_list_items(
    data = data.frame(
      Name = c("Jim", "Jane", "Jayden")
    ),
    list_name = sp_list_url
  )
}
}
