% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_sharepoint.R
\name{read_sharepoint}
\alias{read_sharepoint}
\title{Read a SharePoint item based on a file URL or file name and site
details}
\usage{
read_sharepoint(
  file,
  ...,
  new_path = tempdir(),
  drive_name = NULL,
  drive_id = NULL,
  drive = NULL,
  site_url = NULL,
  site_name = NULL,
  site_id = NULL,
  site = NULL,
  dest = NULL,
  overwrite = TRUE,
  recursive = FALSE,
  parallel = FALSE
)
}
\arguments{
\item{file}{Required. A SharePoint shared file URL, document URL, or, if
\code{item_id} is supplied, a file name to use in combination with \code{new_path} to
set \code{dest} with location and filename for downloaded item.}

\item{...}{Additional parameters passed to one of the functions identified in
the description.}

\item{new_path}{Path to directory for downloaded item. Optional if \code{dest} is
supplied.}

\item{drive_name, drive_id}{SharePoint drive name or ID.}

\item{drive}{A \code{ms_drive} object. If drive is supplied, \code{drive_name},
\code{site_url}, and any additional parameters passed to \code{...} are ignored.}

\item{site_url}{A SharePoint site URL in the format "https://[tenant
name].sharepoint.com/sites/[site name]". Any SharePoint item or document
URL will be parsed and a site URL built using the tenant and site name if
found.}

\item{site_name, site_id}{Site name or ID of the SharePoint site as an
alternative to the SharePoint site URL. Only one of the three arguments
should be supplied.}

\item{site}{A \code{ms_site} object. If site is supplied, \code{site_url} is ignored.}

\item{dest, overwrite, recursive, parallel}{Parameters passed to \code{download}
method for \code{ms_drive_item} object.}
}
\description{
\code{\link[=read_sharepoint]{read_sharepoint()}} is designed to download a SharePoint item to a temporary
folder and read the file based on the file extension. The class of the
returned object depends on the file extension of the file parameter.
\itemize{
\item If the file is a csv, csv2, or tsv file or a Microsoft Excel file (xlsx or
xls), \code{\link[readr:read_delim]{readr::read_delim()}} or \code{\link[readxl:read_excel]{readxl::read_excel()}} is used to return a
data frame.
\item If the file is a rds file, \code{\link[readr:read_rds]{readr::read_rds()}} is used to return the saved
object.
\item If the file is a pptx or docx file, \code{\link[officer:read_docx]{officer::read_docx()}} or
\code{\link[officer:read_pptx]{officer::read_pptx()}} are used to read the file into a \code{rdocx} or \code{rpptx}
object.
\item If the file has a "gpkg", "geojson", "kml", "gdb", or "shp" file extension,
\code{\link[sf:st_read]{sf::read_sf()}} is used to read the file into a \code{sf} data frame.
}

If the file has none of these file extensions, an attempt is made to read the
file with \code{\link[readr:read_lines]{readr::read_lines()}}.
}
