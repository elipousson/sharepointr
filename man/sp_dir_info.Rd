% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sp_dir.R
\name{sp_dir_info}
\alias{sp_dir_info}
\alias{sp_dir_ls}
\title{List SharePoint files and folders}
\usage{
sp_dir_info(
  path = NULL,
  ...,
  info = "partial",
  full_names = TRUE,
  pagesize = 1000,
  drive_name = NULL,
  drive_id = NULL,
  drive = NULL,
  recurse = FALSE,
  type = "any",
  regexp = NULL,
  invert = FALSE,
  perl = FALSE,
  call = caller_env()
)

sp_dir_ls(
  path = NULL,
  ...,
  full_names = FALSE,
  pagesize = 1000,
  drive_name = NULL,
  drive_id = NULL,
  drive = NULL,
  type = "any",
  regexp = NULL,
  invert = FALSE,
  perl = FALSE,
  call = caller_env()
)
}
\arguments{
\item{path}{Path to directory or folder. SharePoint folder URLs are allowed.
If \code{NULL}, path is set to default "/". \code{path} can be a string or a
character vector. If a vector or path of URLs are supplied, provide a
\code{drive} object to improve performance.}

\item{...}{
  Arguments passed on to \code{\link[=get_sp_drive]{get_sp_drive}}
  \describe{
    \item{\code{drive_url}}{A SharePoint Drive URL to parse for a Drive name and other
information. If \code{drive_name} is a URL, it is used as \code{drive_url}.}
    \item{\code{default_drive_name}}{Drive name string used only if input is a document
URL and drive name is not part of the URL. Defaults to
\code{getOption("sharepointr.default_drive_name", "Documents")}}
    \item{\code{cache}}{If \code{TRUE}, cache drive to a file using \code{\link[=cache_sp_drive]{cache_sp_drive()}}.}
    \item{\code{refresh}}{If \code{TRUE}, get a new drive even if the existing drive is
cached as a local option. If \code{FALSE}, use the cached \code{ms_drive} object if
it exists.}
    \item{\code{cache_file}}{File name for cached drive if \code{cache = TRUE}. Defaults to a
option set with \code{sharepointr.cache_file_drive} (which defaults to
\code{"sp_drive.rds"}).}
    \item{\code{site_url}}{A SharePoint site URL in the format "https://[tenant
name].sharepoint.com/sites/[site name]". Any SharePoint item or document
URL can also be parsed to build a site URL using the tenant and site name
included in the URL.}
    \item{\code{site}}{A \code{ms_site} object. If \code{site} is supplied, \code{site_url},
\code{site_name}, and \code{site_id} are ignored.}
    \item{\code{overwrite}}{If \code{TRUE}, replace the existing cached object named by
\code{cache_file} with the new object. If \code{FALSE}, error if a cached file with
the same \code{cache_file} name already exists.}
  }}

\item{info}{The information to return: "partial", "name" or "all". If
"partial", a data frame is returned containing the name, size, ID and
whether the item is a file or folder. If "all", a data frame is returned
containing all the properties for each item (this can be large).}

\item{full_names}{If \code{TRUE} (default), return the full file path as the name
for each item.}

\item{pagesize}{Maximum number of items to return. Defaults to 1000. Decrease
if you are experiencing timeouts.}

\item{drive_name, drive_id}{SharePoint Drive name or ID passed to \code{get_drive}
method for SharePoint site object.}

\item{drive}{A \code{ms_drive} object. If \code{drive} is supplied, \code{drive_name} and
\code{drive_id} are ignored.}

\item{recurse}{If \code{TRUE}, get info for each directory at the supplied path
and combine this info with the item info for the supplied path.}

\item{type}{Type of item to return. Can be "any", "file", or "directory".
"directory" is not a supported option for \code{\link[=sp_dir_ls]{sp_dir_ls()}}}

\item{regexp}{Regular expression passed to \code{grep()} and used to filter the
paths before they are returned.}

\item{invert}{logical. If \code{TRUE} return indices or values for
    elements that do \emph{not} match.}

\item{perl}{logical.  Should Perl-compatible regexps be used?}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}
}
\description{
\code{\link[=sp_dir_info]{sp_dir_info()}} is a wrapper for the \code{list_files} method with some additional
features based on \code{\link[fs:dir_ls]{fs::dir_info()}}. \code{\link[=sp_dir_ls]{sp_dir_ls()}} returns a character vector
and does not yet include support for the \code{recurse} argument.  If
\code{{fs}} is installed, the size column is formatted using \code{\link[fs:fs_bytes]{fs::as_fs_bytes()}}
and an additional "type" factor column is added with values for directory and
file.
}
\examples{
dir_url <- "<link to SharePoint directory or drive>"

if (is_sp_url(dir_url)) {
  sp_dir_info(
    path = dir_url
  )

  sp_dir_ls(
    path = dir_url
  )
}

}
