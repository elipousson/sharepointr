% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sp_list_item.R
\name{sp_list_item}
\alias{sp_list_item}
\alias{list_sp_list_items}
\alias{get_sp_list_item}
\alias{create_sp_list_items}
\alias{import_sp_list_items}
\alias{update_sp_list_item}
\title{Get, list, update, and delete SharePoint list items}
\usage{
list_sp_list_items(
  list_name = NULL,
  list_id = NULL,
  sp_list = NULL,
  ...,
  filter = NULL,
  select = NULL,
  all_metadata = FALSE,
  as_data_frame = TRUE,
  pagesize = 5000,
  names_from = "displayName",
  name_repair = "unique",
  site_url = NULL,
  site = NULL,
  drive_name = NULL,
  drive_id = NULL,
  drive = NULL,
  call = caller_env()
)

get_sp_list_item(
  id,
  list_name = NULL,
  list_id = NULL,
  sp_list = NULL,
  ...,
  site_url = NULL,
  site = NULL,
  drive_name = NULL,
  drive_id = NULL,
  drive = NULL,
  call = caller_env()
)

create_sp_list_items(
  data,
  list_name = NULL,
  list_id = NULL,
  sp_list = NULL,
  ...,
  site_url = NULL,
  site = NULL,
  drive_name = NULL,
  drive_id = NULL,
  drive = NULL,
  check_fields = TRUE,
  sync_fields = FALSE,
  strict = FALSE,
  call = caller_env()
)

update_sp_list_item(
  id,
  list_name = NULL,
  list_id = NULL,
  sp_list = NULL,
  ...,
  .fields = NULL,
  site_url = NULL,
  site = NULL,
  drive_name = NULL,
  drive_id = NULL,
  drive = NULL,
  call = caller_env()
)
}
\arguments{
\item{list_name, list_id}{SharePoint List name or ID string.}

\item{sp_list}{A \code{ms_list} object. If supplied, \code{list_name}, \code{list_id},
\code{site_url}, \code{site}, \code{drive_name}, \code{drive_id}, \code{drive}, and any additional
parameters passed to \code{...} are all ignored.}

\item{...}{
  Arguments passed on to \code{\link[=get_sp_list]{get_sp_list}}
  \describe{
    \item{\code{list_name,list_id}}{SharePoint List name or ID string.}
    \item{\code{metadata}}{If \code{TRUE}, \code{\link[=get_sp_list]{get_sp_list()}} applies the \code{get_column_info}
method to the returned SharePoint list and returns a data frame with column
metadata for the list.}
    \item{\code{drive_name,drive_id}}{SharePoint Drive name or ID passed to \code{get_drive}
method for SharePoint site object.}
  }}

\item{filter}{A string with \href{https://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#filter-parameter}{an OData expression}
apply as a filter to the results. Learn more in the \href{https://learn.microsoft.com/en-us/graph/filter-query-parameter}{Microsoft Graph API documentation}
on using filter query parameters.}

\item{select}{A character vector of column names to include in the returned
data frame of list items. If \code{NULL}, the data frame includes all columns
from the list.}

\item{all_metadata}{If \code{TRUE}, the returned data frame will contain extended
metadata as separate columns, while the data fields will be in a nested
data frame named fields. This is always set to \code{FALSE} if \code{n = NULL} or
\code{as_data_frame = FALSE}.}

\item{as_data_frame}{If \code{TRUE}, return a data frame with a "ms_list" column.
\code{\link[=get_sp_list]{get_sp_list()}} returns a 1 row data frame and \code{\link[=list_sp_lists]{list_sp_lists()}} returns a
data frame with n rows or all lists available for the SharePoint site or
drive. Defaults to \code{FALSE}. Ignored is \code{metadata = TRUE} as list metadata
is always returned as a data frame.}

\item{pagesize}{Number of list items to return. Reduce from default of 5000
is experiencing timeouts.}

\item{names_from}{Source for column names. Must be \code{"displayName"} (default)
or \code{"name"}. Defaults value \code{"displayName"} uses display name values from
list metadata for visible, non-read only columns.}

\item{name_repair}{Defaults to  Passed to \code{repair} argument of \code{\link[vctrs:vec_as_names]{vctrs::vec_as_names()}}}

\item{site_url}{A SharePoint site URL in the format "https://[tenant
name].sharepoint.com/sites/[site name]". Any SharePoint item or document
URL can also be parsed to build a site URL using the tenant and site name
included in the URL.}

\item{site}{A \code{ms_site} object. If \code{site} is supplied, \code{site_url},
\code{site_name}, and \code{site_id} are ignored.}

\item{drive_name, drive_id}{SharePoint Drive name or ID passed to \code{get_drive}
method for SharePoint site object.}

\item{drive}{A \code{ms_drive} object. If \code{drive} is supplied, \code{drive_name} and
\code{drive_id} are ignored.}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}

\item{id}{Required. A SharePoint list item ID typically an integer for the
record number starting from 1 with the first record.}

\item{data}{Required. A data frame to import as items to the supplied or
identified SharePoint list.}

\item{check_fields}{If \code{TRUE} (default), column names for the input data are
matched to the fields of the list object. If \code{FALSE}, the function will
error if any column names can't be matched to a field in the supplied
SharePoint list.}

\item{sync_fields}{If \code{TRUE}, use the \code{sync_fields} method to sync the fields
of the local sp_list object with the fields of the SharePoint List source.}

\item{strict}{If \code{TRUE}, all column names in data must be matched to field
names in the supplied SharePoint list. If \code{FALSE} (default), unmatched
columns will be dropped with a warning.}
}
\description{
\code{\link[=list_sp_list_items]{list_sp_list_items()}} lists \code{sp_list} items. Additional functions should be
completed for the \code{get_item}, \code{create_item}, \code{update_item}, and \code{delete_item}
methods documented in \link[Microsoft365R:ms_list]{Microsoft365R::ms_list}.
}
\details{
Creating new list items with \code{create_sp_list_items()}

The handling of item creation when column names in \code{data} do not match the
fields names in the supplied list includes a few options:
\itemize{
\item If no names in data match fields in the list, the function errors and lists the field names.
\item If all names in data match fields in the list the records are created. Any fields that do not have corresponding names in data remain blank.
\item If any names in data do not match fields in the list, by default, those columns are dropped before adding items to the list.
\item If \code{strict = TRUE} and any names in data to not match fields, the function errors.
}
}
\examples{
sp_list_url <- "<SharePoint List URL with a Name field>"

if (is_sp_url(sp_list_url)) {
  create_sp_list_items(
    data = data.frame(
      Name = c("Jim", "Jane", "Jayden")
    ),
    list_name = sp_list_url
  )
}
}
